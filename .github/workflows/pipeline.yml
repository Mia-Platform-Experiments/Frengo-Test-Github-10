name: Deploy Workflow
on: deployment
jobs:
  deploy-ENVIRONMENT_NAME:
    name: Deploy to ENVIRONMENT_NAME environment
    if: ${{ github.event.deployment.environment }} == ENVIRONMENT_NAME
    concurrency: ENVIRONMENT_NAME
    permissions:
      deployments: write
      contents: read
    runs-on: ubuntu-latest
    container: miaplatform/mlp:2.1.0
    steps:
      - uses: actions/checkout@v4
      - name: Update deployment status (pending)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'pending'
          deployment-id: ${{ github.event.deployment.id }}
      - name: Deploy my app
        env:
          GIT_DEPTH: 1
          ENVIRONMENT_VARIABLES_PREFIX: MIA_
          BASE_PATH: $GITHUB_WORKSPACE/configuration
          OVERLAY_PATH: "$GITHUB_WORKSPACE/overlays/$ENVIRONMENT_NAME"
          DESTINATION_PATH: "$GITHUB_WORKSPACE/interpolated-files"
          GENERATE_FILE: "$GITHUB_WORKSPACE/mlp.yaml"
          VARIABLES_FILE: "$GITHUB_WORKSPACE/overlays/$ENVIRONMENT_NAME/variables.env"
        run: |
          export RELEASE_DATE="$(date -I'seconds' -u)"
          echo $RELEASE_DATE
          echo $GIT_DEPTH
          echo $ENVIRONMENT_VARIABLES_PREFIX
          echo $BASE_PATH
          echo $OVERLAY_PATH
          echo $DESTINATION_PATH
          echo $GENERATE_FILE
          echo $VARIABLES_FILE
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'success'
          deployment-id: ${{ github.event.deployment.id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'failure'
          deployment-id: ${{ github.event.deployment.id }}